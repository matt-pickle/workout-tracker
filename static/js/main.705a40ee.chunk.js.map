{"version":3,"sources":["Components/NavButton.js","Components/Header.js","Components/InputBox.js","Components/Button.js","Components/Lift.js","Components/TimerInputs.js","Components/TimerDisplay.js","Components/Timer.js","Components/Home.js","Components/PastLift.js","Components/PastWorkout.js","Components/History.js","Components/WeightInput.js","Components/WeightChart.js","Components/Weight.js","Components/App.js","index.js"],"names":["NavButton","props","useState","hoverClass","setHoverClass","hover","unHover","to","link","className","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","text","Header","React","forwardRef","ref","input","setInput","useEffect","addToLift","name","htmlFor","id","type","value","onChange","event","target","Button","onClick","sets","setSets","liftObj","setLiftObj","repsInputRef","useRef","key","current","focus","addToWorkout","repInputBoxes","map","setNum","newSetNum","length","prev","TimerInputs","addZero","num","minutesArr","i","push","minutesOptions","secondsArr","secondsOptions","minutes","setMinutes","seconds","setSeconds","TimerDisplay","minutesRemaining","setMinutesRemaining","secondsRemaining","setSecondsRemaining","endingTime","Date","now","calculateTimeRemaining","Math","floor","timer","setInterval","clearInterval","alert","setTimerIsRunning","Timer","timerIsRunning","startButton","stopButton","Home","lifts","setLifts","workoutArr","setWorkoutArr","liftNameInputRef","some","obj","allLifts","liftNum","newLiftNum","today","month","getMonth","date","getDate","year","getFullYear","dateString","workoutObj","workoutHistory","JSON","parse","localStorage","getItem","newWorkoutHistory","setItem","stringify","PastLift","lift","weight","reps","PastWorkout","pastLifts","repsArr","numOfSets","Object","keys","History","pastWorkouts","workout","workoutDate","WeightInput","for","weightHistory","newWeightHistory","setWeightHistory","WeightChart","chartData","labels","datasets","label","data","values","borderColor","borderWidth","pointBackgroundColor","options","legend","display","scales","xAxes","gridLines","lineWidth","color","ticks","fontColor","fontSize","fontStyle","yAxes","lineHeight","Weight","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.705a40ee.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"../Styles/NavButton.css\";\r\n\r\nfunction NavButton(props) {\r\n  const [hoverClass, setHoverClass] = useState(\"\");\r\n\r\n  function hover() {\r\n    setHoverClass(\"hovered\");\r\n  }\r\n\r\n  function unHover() {\r\n    setHoverClass(\"\");\r\n  }\r\n\r\n  return (\r\n    <Link to={props.link}>\r\n      <button className={`navButton ${hoverClass}`}\r\n              onMouseEnter={hover}\r\n              onMouseLeave={unHover}\r\n              onTouchStart={hover}\r\n              onTouchEnd={unHover}\r\n      >\r\n        {props.text}\r\n      </button>\r\n    </Link>\r\n  )\r\n}\r\n\r\n\r\nexport default NavButton;","import React from \"react\";\r\nimport NavButton from \"./NavButton\";\r\nimport \"../Styles/Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <NavButton text=\"HISTORY\"\r\n              link=\"/history\"\r\n      />\r\n      <NavButton text=\"CURRENT\"\r\n              link=\"/\"\r\n      />\r\n      <NavButton text=\"WEIGHT\"\r\n              link=\"/weight\"\r\n      />\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\n\r\nexport default Header;","import React, {useState, useEffect} from \"react\";\r\nimport \"../Styles/InputBox.css\";\r\n\r\nfunction InputBox(props, ref) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    setInput(event.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.addToLift(props.name, input)\r\n  }, [input])\r\n\r\n  return (\r\n    <div className=\"inputBox\">\r\n      <label htmlFor={props.name}>{props.name}</label>\r\n      <div className=\"inputContainer\" id={props.name + \"Container\"}>\r\n        <input type=\"text\"\r\n               id={props.name}\r\n               value={input}\r\n               onChange={handleChange}\r\n               ref={ref}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.forwardRef(InputBox);","import React, {useState} from \"react\";\r\nimport \"../Styles/Button.css\";\r\n\r\nfunction Button(props) {\r\n  const [hoverClass, setHoverClass] = useState(\"\");\r\n\r\n  function hover() {\r\n    setHoverClass(\"hovered\");\r\n  }\r\n\r\n  function unHover() {\r\n    setHoverClass(\"\");\r\n  }\r\n\r\n  return (\r\n    <button className={`button ${hoverClass}`}\r\n            onMouseEnter={hover}\r\n            onMouseLeave={unHover}\r\n            onTouchStart={hover}\r\n            onTouchEnd={unHover}\r\n            onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React, {useState, useEffect, useRef} from \"react\";\r\nimport InputBox from \"./InputBox\";\r\nimport Button from \"./Button\";\r\nimport \"../Styles/Lift.css\";\r\n\r\nfunction Lift(props, ref) {\r\n  const [sets, setSets] = useState([1]);\r\n  const [liftObj, setLiftObj] = useState({id: props.id});\r\n  const repsInputRef = useRef(null);\r\n\r\n  function addSet() {\r\n    const newSetNum = sets.length + 1;\r\n    setSets(prev => [...prev, newSetNum]);\r\n  }\r\n\r\n  function addToLift(key, value) {\r\n    setLiftObj({...liftObj, [key]: value});\r\n  }\r\n\r\n  //Focuses the new input box when a new set is added\r\n  useEffect(() => {    \r\n    repsInputRef.current.focus();\r\n  }, [sets]);\r\n\r\n  useEffect(() => {\r\n    props.addToWorkout(liftObj);\r\n  }, [liftObj]);\r\n\r\n  const repInputBoxes = sets.map(setNum => {\r\n    return <InputBox name={`Set ${setNum} Reps`}\r\n                     key={setNum}\r\n                     ref={repsInputRef}\r\n                     addToLift={addToLift}\r\n    />\r\n  })\r\n\r\n  return (\r\n    <div className=\"liftBox\">\r\n      <InputBox name=\"Lift\"\r\n                addToLift={addToLift}\r\n                ref={ref}\r\n      />\r\n      <InputBox name=\"Weight\"\r\n                addToLift={addToLift}\r\n      />\r\n      {repInputBoxes}\r\n      <Button text=\"ADD SET\"\r\n              onClick={addSet}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.forwardRef(Lift);","import React from \"react\";\r\nimport \"../Styles/TimerInputs.css\";\r\n\r\nfunction TimerInputs(props) {\r\n  \r\n  //Adds zero in front of single-digit numbers\r\n  function addZero(num) {\r\n    if (num < 10) {\r\n      return `0${num}`;\r\n    } else {\r\n      return num;\r\n    }\r\n  }\r\n  \r\n  //Populates minutes options\r\n  let minutesArr = [];\r\n  for (let i = 0; i <= 59; i++) {\r\n    minutesArr.push(i);\r\n  }\r\n  const minutesOptions = minutesArr.map(num => {\r\n    return <option key={num}>{addZero(num)}</option>\r\n  });\r\n\r\n  //Populates seconds options\r\n  let secondsArr = [];\r\n  for (let i = 0; i <= 59; i++) {\r\n    secondsArr.push(i);\r\n  }\r\n  const secondsOptions = secondsArr.map(num => {\r\n    return <option key={num}>{addZero(num)}</option>\r\n  });\r\n\r\n  function changeMinutes(event) {\r\n    props.setMinutes(event.target.value);\r\n  }\r\n\r\n  function changeSeconds(event) {\r\n    props.setSeconds(event.target.value);\r\n  } \r\n\r\n  return (\r\n    <form>\r\n      <select className=\"timerInput\"\r\n              value={props.minutes}\r\n              onChange={changeMinutes}\r\n      >\r\n       {minutesOptions}\r\n      </select>\r\n      <select className=\"timerInput\"\r\n              value={props.seconds}\r\n              onChange={changeSeconds}\r\n      >\r\n       {secondsOptions}\r\n      </select>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TimerInputs;","import React, {useState, useEffect} from \"react\";\r\nimport \"../Styles/TimerDisplay.css\";\r\n\r\nfunction TimerDisplay(props) {\r\n  const [minutesRemaining, setMinutesRemaining] = useState(props.minutes);\r\n  const [secondsRemaining, setSecondsRemaining] = useState(props.seconds);\r\n  \r\n  const startingTime = Date.now();\r\n  const timerMilliseconds = props.minutes * 60000 + props.seconds * 1000;\r\n  const endingTime = startingTime + timerMilliseconds;\r\n\r\n  //Adds zero in front of single-digit numbers and changes 60 to 00\r\n  function addZero(num) {\r\n    if (num < 10 && num >= 0) {\r\n      return `0${num}`;\r\n    } else {\r\n      return num;\r\n    }\r\n  }\r\n\r\n  //Calculates minutes and seconds remaining and sets them to state\r\n  function calculateTimeRemaining() {\r\n    setSecondsRemaining(addZero(Math.floor(((endingTime - Date.now()) / 1000) % 60)));\r\n    setMinutesRemaining(addZero(Math.floor(((endingTime - Date.now()) / 60000) % 60)));\r\n  }\r\n\r\n  //Runs calculateTimeRemaining() every second\r\n  useEffect(() => {\r\n    let timer = null;\r\n    calculateTimeRemaining();\r\n    timer = setInterval(calculateTimeRemaining, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  //Alerts when time is up and switches back to the input display\r\n  function timesUp() {\r\n    if (minutesRemaining === \"00\" && secondsRemaining === \"00\") {\r\n      alert(\"Times Up!\");\r\n      props.setTimerIsRunning(false);\r\n    }\r\n  }\r\n\r\n    return (\r\n    <div className=\"timerDisplay\">\r\n      <p>{`${minutesRemaining} : ${secondsRemaining}`}</p>\r\n      {timesUp()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimerDisplay;","import React, {useState} from \"react\";\r\nimport TimerInputs from \"./TimerInputs\";\r\nimport TimerDisplay from \"./TimerDisplay\";\r\nimport Button from \"./Button\";\r\nimport \"../Styles/Timer.css\";\r\n\r\nfunction Timer() {\r\n  const [timerIsRunning, setTimerIsRunning] = useState(false);\r\n  const [minutes, setMinutes] = useState(\"00\");\r\n  const [seconds, setSeconds] = useState(\"00\");\r\n  \r\n  const startButton = <Button text=\"START\" onClick={startTimer} />;\r\n  const stopButton = <Button text=\"STOP\" onClick={stopTimer} />;\r\n\r\n  function startTimer() {\r\n    setTimerIsRunning(true);\r\n  }\r\n\r\n  function stopTimer() {\r\n    setTimerIsRunning(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      {timerIsRunning ?\r\n        <TimerDisplay minutes={minutes}\r\n                      seconds={seconds}\r\n                      setTimerIsRunning={setTimerIsRunning}\r\n        /> :\r\n        <TimerInputs minutes={minutes}\r\n                     setMinutes={setMinutes}\r\n                     seconds={seconds}\r\n                     setSeconds={setSeconds}\r\n        />}\r\n      {timerIsRunning ? stopButton : startButton}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer;","import React, {useState, useEffect, useRef} from \"react\";\r\nimport Lift from \"./Lift\";\r\nimport Button from \"./Button\";\r\nimport Timer from \"./Timer\";\r\nimport \"../Styles/Home.css\";\r\n\r\nfunction Home() {\r\n  const [lifts, setLifts] = useState([1]);\r\n  const [workoutArr, setWorkoutArr] = useState([]);\r\n  const liftNameInputRef = useRef(null);\r\n\r\n  function addLift() {\r\n    const newLiftNum = lifts.length + 1;\r\n    setLifts(prev => [...prev, newLiftNum]);\r\n  }\r\n\r\n  //Checks to see if the lift is already in workoutArr and replaces/adds it\r\n  function addToWorkout(liftObj) {\r\n    if (workoutArr.some(obj => obj.id === liftObj.id)) {\r\n      setWorkoutArr(workoutArr.map(obj => {\r\n        if (obj.id === liftObj.id) {\r\n          return liftObj;\r\n        } else {\r\n          return obj;\r\n        }\r\n      }));\r\n    } else {\r\n      setWorkoutArr([...workoutArr, liftObj]);\r\n    }\r\n  }\r\n  \r\n  //Saves workout to localStorage\r\n  function saveWorkout() {\r\n    const today = new Date();\r\n    const month = today.getMonth() + 1;\r\n    const date = today.getDate();\r\n    const year = today.getFullYear();\r\n    const dateString = `${month}-${date}-${year}`;\r\n\r\n    const workoutObj = {[dateString]: workoutArr};\r\n    const workoutHistory = JSON.parse(localStorage.getItem(\"workoutHistory\")) || [];\r\n    const newWorkoutHistory = [...workoutHistory, workoutObj];\r\n    \r\n    localStorage.setItem(\"workoutHistory\", JSON.stringify(newWorkoutHistory));\r\n  }\r\n\r\n  //Focuses the Lift input when a new lift is added\r\n  useEffect(() => {\r\n    liftNameInputRef.current.focus();\r\n  }, [lifts]);\r\n\r\n  const allLifts = lifts.map(liftNum => {\r\n    return <Lift key={liftNum}\r\n                 id={liftNum}\r\n                 ref={liftNameInputRef}\r\n                 addToWorkout={addToWorkout}\r\n    />\r\n  })\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"liftsContainer\">\r\n        {allLifts}\r\n        <Button text=\"ADD LIFT\"\r\n                onClick={addLift}\r\n        />\r\n      </div>\r\n      <div className=\"completeButton\">\r\n        <Button text=\"WORKOUT COMPLETE!\" \r\n                onClick={saveWorkout}\r\n        />\r\n      </div>\r\n      <Timer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"../Styles/PastLift.css\";\r\n\r\nfunction PastLift(props) {\r\n  return (\r\n    <div className=\"pastLift\">\r\n      <p>Lift: {props.lift}</p>\r\n      <p>Weight: {props.weight}lbs</p>\r\n      {props.reps}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PastLift;","import React from \"react\";\r\nimport \"../Styles/PastWorkout.css\";\r\nimport PastLift from \"./PastLift\";\r\n\r\nfunction PastWorkout(props) {\r\n  const pastLifts = props.workoutArr.map(lift => {    \r\n    let repsArr = [];\r\n    const numOfSets = Object.keys(lift).length - 2;\r\n    let i;\r\n    for (i = 1; i < numOfSets; i++) {\r\n      repsArr.push(<p>Set {i} Reps: {lift[`Set ${i} Reps`]}</p>);\r\n    }\r\n    return (\r\n      <PastLift lift={lift[\"Lift\"]}\r\n                weight={lift[\"Weight\"]}\r\n                reps={repsArr}\r\n      />\r\n    )                     \r\n  })\r\n  \r\n  return (\r\n    <div className=\"pastWorkout\">\r\n      <p className=\"dateText\">{props.date}</p>\r\n      <div className=\"pastLiftsContainer\">\r\n        {pastLifts}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PastWorkout;","import React from \"react\";\r\nimport \"../Styles/History.css\";\r\nimport PastWorkout from \"./PastWorkout\";\r\n\r\nfunction History() {\r\n  const workoutHistory = JSON.parse(localStorage.getItem(\"workoutHistory\"));\r\n\r\n  const pastWorkouts = workoutHistory ? \r\n    workoutHistory.map(workout => {\r\n      const workoutDate = Object.keys(workout)\r\n      return (\r\n        <PastWorkout date={workoutDate}\r\n                    workoutArr={workout[workoutDate]}\r\n        />\r\n      )\r\n    })\r\n  : <h1>No workout history yet!</h1>;\r\n\r\n  \r\n  return (\r\n    <div className=\"history\">\r\n      {pastWorkouts}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default History;","import React, {useState} from \"react\";\r\nimport \"../Styles/WeightInput.css\";\r\nimport Button from \"./Button\";\r\n\r\nfunction WeightInput(props) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const today = new Date();\r\n  const month = today.getMonth() + 1;\r\n  const date = today.getDate();\r\n  const year = today.getFullYear();\r\n  const dateString = `${month}-${date}-${year}`;\r\n\r\n  function handleChange(event) {\r\n    setInput(event.target.value);\r\n  }\r\n\r\n  //Saves current weight to localStorage and state\r\n  function addToHistory() {\r\n    const weightHistory = JSON.parse(localStorage.getItem(\"weightHistory\")) || {};\r\n    const newWeightHistory = {...weightHistory, [dateString]: input};\r\n    localStorage.setItem(\"weightHistory\", JSON.stringify(newWeightHistory));\r\n    props.setWeightHistory(newWeightHistory);\r\n  }\r\n\r\n  return (\r\n    <div className=\"inputBox\">\r\n      <label for=\"weight\">Current Weight</label>\r\n      <div className=\"inputContainer\" id=\"weightContainer\">\r\n        <input type=\"text\"\r\n               id=\"weight\"\r\n               value={input}\r\n               onChange={handleChange}\r\n        />\r\n      </div>\r\n      <Button text=\"SAVE\"\r\n              onClick={addToHistory}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeightInput;","import React from \"react\";\r\nimport {Line} from \"react-chartjs-2\";\r\nimport \"../Styles/WeightChart.css\";\r\n\r\nfunction WeightChart(props) {\r\n  const datesArr = Object.keys(props.weightHistory) || [];\r\n  const weightsArr = Object.values(props.weightHistory) || [];\r\n  \r\n  //Data and styling for the chart\r\n  const chartData = {\r\n    labels: datesArr,\r\n    datasets: [{\r\n      label: \"Weight\",\r\n      data: weightsArr,\r\n      borderColor: \"rgb(100, 100, 100)\",\r\n      borderWidth: 3,\r\n      pointBackgroundColor: \"rgb(100, 100, 100)\"\r\n    }]\r\n  };\r\n  const chartOptions = {\r\n    legend: {\r\n      display: false\r\n    },\r\n    scales: {\r\n      xAxes: [{\r\n        gridLines: {\r\n          lineWidth: 1,\r\n          color: \"rgb(0, 0, 0)\"\r\n        },\r\n        ticks: {\r\n          fontColor: \"rgb(100, 100, 100)\",\r\n          fontSize: 12,\r\n          fontStyle: \"bold\"\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        gridLines: {\r\n          lineWidth: 1,\r\n          color: \"rgb(0, 0, 0)\"\r\n        },\r\n        ticks: {\r\n          fontColor: \"rgb(100, 100, 100)\",\r\n          fontSize: 12,\r\n          fontStyle: \"bold\",\r\n          lineHeight: 2\r\n        }\r\n      }]\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"weightChart\">\r\n      <Line data={chartData}\r\n            options={chartOptions}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeightChart;","import React, {useState} from \"react\";\r\nimport WeightInput from \"./WeightInput\";\r\nimport WeightChart from \"./WeightChart\";\r\nimport \"../Styles/Weight.css\";\r\n\r\nfunction Weight() {\r\n  const [weightHistory, setWeightHistory] = useState(\r\n    JSON.parse(localStorage.getItem(\"weightHistory\")) || {}\r\n  );\r\n\r\n  return (\r\n    <div className=\"weightContainer\">\r\n      <WeightInput setWeightHistory={setWeightHistory} />\r\n      <WeightChart weightHistory={weightHistory}      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weight;","import React from 'react';\nimport '../Styles/App.css';\nimport {Switch, Route} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport History from \"./History\";\nimport Weight from \"./Weight\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\"><Home /></Route>\n        <Route path=\"/history\"><History /></Route>\n        <Route path=\"/weight\"><Weight /></Route>\n      </Switch>\n    </div>\n    \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './Components/App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}